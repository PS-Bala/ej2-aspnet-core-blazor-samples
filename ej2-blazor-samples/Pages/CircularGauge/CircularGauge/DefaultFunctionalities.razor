@page "/CircularGauge/DefaultFunctionalities"

@using Syncfusion.EJ2.RazorComponents.CircularGauge

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Default Functionalities";
    SampleBrowser.CurrentControlName = "CircularGauge";
    SampleBrowser.CurrentControlCategory = "CircularGauge";
    SampleBrowser.CurrentControl = SampleBrowser.Config.CircularGauge;
    SampleBrowser.ActionDescription = new string[] {
        @" <p>
            This sample illustrates the default rendering of circular gauge.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            In this example, you can see how to render a default circular gauge. The CircularGauge control visualizes the numerical values of scales in a circular manner. You can use <code>axes</code>, <code>ranges</code>, <code>pointers</code> properties to customize the default appearance of the gauge. In this sample, a axis with multiple ranges and a pointer has been used.
        </p>
        <p>
            More information on the gauge can be found in this
            <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation"">documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsCircularGauge ID="gauge" >
    <CircularGaugeAxes>
        <CircularGaugeAxis Radius="80%" StartAngle="230" EndAngle="130">  
                <CircularGaugeLabel offset="-5">
                    <CircularGaugeFont FontFamily="Roboto" Size="12px" FontWeight="Regular">
                    </CircularGaugeFont>
                </CircularGaugeLabel>
                    <CircularGaugeAxisLineStyle Width="8" Color="#E0E0E0">
                    </CircularGaugeAxisLineStyle>          
                    <CircularGaugeAxisMajorTicks Width="0.01"  >
                    </CircularGaugeAxisMajorTicks>
                    <CircularGaugeAxisMinorTicks Width="0.01"  >
                    </CircularGaugeAxisMinorTicks>
                <CircularGaugePointers>
                        <CircularGaugePointer  Value=60 Radius="60%" Color="#757575" PointerWidth="7">
                            <CircularGaugeCap Radius="8" Color="#757575">
                            <CircularGaugeCapBorder Width="0">
                            </CircularGaugeCapBorder>
                            </CircularGaugeCap>   
                            <CircularGaugeNeedleTail Color="#757575" Length="25%">
                            </CircularGaugeNeedleTail>                 
                        </CircularGaugePointer>
                </CircularGaugePointers>
            </CircularGaugeAxis>
        </CircularGaugeAxes>
</EjsCircularGauge>
</div>
